name: jtech_anime
description: A new Flutter project.
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.1.6+106

environment:
  sdk: '>=3.0.5 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  flutter_localizations:
    sdk: flutter

  # 国际化
  intl: any

  # 路径
  path: ^1.8.3

  # 路径管理
  path_provider: ^2.1.0

  # sp缓存
  shared_preferences: ^2.2.0

  # 加密
  crypto: ^3.0.3

  # 日志
  logger: ^2.0.1

  # 网络请求框架
  dio: ^5.3.2

  # 图片框架
  extended_image: ^8.1.0

  # 图标
  font_awesome_flutter: ^10.5.0

  # 数据库框架
  isar: ^3.1.0+1

  # 数据库框架核心
  isar_flutter_libs: ^3.1.0+1

  # 包信息
  package_info_plus: ^4.1.0

  # 动画
  lottie: ^2.6.0

  # 模糊
  blur: ^3.1.0

  # 跑马灯
  text_scroll: ^0.2.0

  # 刷新组件
  easy_refresh: ^3.3.2+1

  # 电池容量
  battery_plus: ^4.0.2

  # 视频播放器
  media_kit: ^1.1.5
  media_kit_video: ^1.1.6
  media_kit_native_event_loop: ^1.0.7
  media_kit_libs_android_video: any
  media_kit_libs_ios_video: any
  media_kit_libs_macos_video: any
  media_kit_libs_windows_video: any
  media_kit_libs_linux: any

  # m3u8文件解析
  flutter_hls_parser: ^2.0.1

  # 权限管理
  permission_handler: ^10.4.3

  # android版本更新
  ota_update: ^5.1.0

  # 通知栏消息
  flutter_local_notifications: ^15.1.0+1

  # ffmpeg
  ffmpeg_helper: ^1.0.1

  # 连接状态检查
  connectivity_plus: ^4.0.2

  # 后台下载器
  background_downloader: ^7.9.2

  # js运行时
  flutter_js: ^0.8.0

  # br解压缩
  brotli: ^0.6.0

  # html解析方法
  html: ^0.15.4

  # 图片选择器
  image_picker: ^1.0.2

  # 二维码扫描/解码
  qr_code_dart_scan: ^0.7.2

  # 屏幕亮度
  screen_brightness: ^0.2.2+1

  # 音量控制
  volume_controller: ^2.0.7

  # collection
  collection: any

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.5

dev_dependencies:
  flutter_test:
    sdk: flutter

  # 数据库框架生成器
  isar_generator: ^3.1.0+1

  # 构建器
  build_runner: any

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.2

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/source/
    - assets/anime/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
